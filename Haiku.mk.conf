WRKOBJDIR=	/usr/work
DISTDIR=	/usr/data/distfiles
PACKAGES=       /usr/local/packages/${OPSYS}/${MACHINE_ARCH}
LOCALPATCHES=		/usr/data/localpatches

ALLOW_VULNERABLE_PACKAGES= yes
SKIP_LICENSE_CHECK= yes
PKG_REGISTER_SHELLS=    yes
PREFER_PKGSRC= yes
_OPSYS_PREFER.getopt=   native
PKG_DEVELOPER=yes

EXTRACT_OPTS_TAR= -Q

#USE_PKGSRC_GCC= yes
#GCC_REQD=               4.7

FONTS_DIRS.ttf=
PLATFORM_SUPPORTS_WAYLAND=	yes
OPSYS_HAS_KQUEUE= yes

.if ${PKGPATH} == "archivers/unrar" || ${PKGPATH} == "net/3proxy"
BUILDLINK_TRANSFORM+=   rm:-pthread
.endif

.if ${PKGPATH} == "net/3proxy"
MAKE_FILE=	Makefile.haiku
.endif

.if ${PKGPATH} == "devel/libexecinfo"
BUILDLINK_TRANSFORM+=   rm:-lm
.else
BUILDLINK_TRANSFORM+=   l:m:root
BUILDLINK_TRANSFORM+=   l:pthread:root
BUILDLINK_TRANSFORM+=   l:rt:root
BUILDLINK_TRANSFORM+=   l:c:root
BUILDLINK_TRANSFORM+=   l:dl:root
BUILDLINK_TRANSFORM+=   l:bind:network
BUILDLINK_TRANSFORM+=   l:nsl:network
BUILDLINK_TRANSFORM+=   l:socket:network
BUILDLINK_TRANSFORM+=   l:util:bsd
BUILDLINK_TRANSFORM+=   l:getopt:bsd
BUILDLINK_TRANSFORM+=   l:attr:gnu
.endif

KRB5_DEFAULT= mit-krb5

PKG_DEFAULT_OPTIONS= -x11 -esound -nas -pulseaudio wide-curses
PKG_OPTIONS.perl= -threads
PKG_OPTIONS.git= -git-send-email
PKG_OPTIONS.SDL= aalib
PKG_OPTIONS.gcc47= -gcc-fortran -gcc-java -gcc-objc -gcc-objc++
PKG_OPTIONS.gcc48= -gcc-graphite -gcc-java
PKG_OPTIONS.freetype2= subpixel
#PKG_OPTIONS.mplayer= -mplayer-runtime-cpudetection
PKG_OPTIONS.psi= -enchant -aspell
PKG_OPTIONS.mc= sftp ncurses slang
#PKG_OPTIONS.php= suhosin
PKG_OPTIONS.cherokee= -pam
PKG_OPTIONS.boost=	icu
PKG_OPTIONS.cairo= -xcb
PKG_OPTIONS.samba= -ads -ldap -winbind -pam
PKG_OPTIONS.subversion= -serf
PKG_OPTIONS.tinyproxy=	-socks5
PKG_OPTIONS.net-snmp=	snmp-unprived
PKG_OPTIONS.mplayer= -dvdnav -dvdread
PKG_OPTIONS.mpv= sdl
PKG_OPTIONS.squid=	-inet6 -snmp -squid-backend-diskd -squid-carp -squid-pam-helper squid-unlinkd ssl

.if defined(GNU_CONFIGURE)
CONFIGURE_ENV+= gl_cv_func_realpath_works="guessing yes"
CONFIGURE_ENV+= sys_lib_dlsearch_path_spec='/boot/system/lib'
CONFIGURE_ENV+= shlibpath_overrides_runpath=no
.endif

.if ${PKGPATH} == "textproc/xmlcatmgr" || ${PKGPATH} == "graphics/netpbm" \
|| ${PKGPATH} == "textproc/mdocml" || ${PKGPATH} == "security/mit-krb5" \
|| ${PKGPATH} == "devel/git-base" || ${PKGPATH} == "archivers/p7zip" \
|| ${PKGPATH} == "mail/msmtp" || ${PKGPATH} == "devel/editline" \
|| ${PKGPATH} == "devel/bmkdep" || ${PKGPATH} == "archivers/unrar" \
|| ${PKGPATH} == "devel/libuuid"
LDFLAGS+= -lbsd
.endif

.if ${PKGPATH} == "comms/minicom"
CONFIGURE_ARGS+= --enable-lock-dir=/var/empty
CONFIGURE_ARGS+= --enable-dfl-port=/dev/ports/usb0
.endif

.if ${PKGPATH} == "graphics/netpbm" || ${PKGPATH} == "security/tcp_wrappers" \
|| ${PKGPATH} == "pkgtools/pkgin" || ${PKGPATH} == "sysutils/spice-server"
LDFLAGS+= -lnetwork
.endif

.if ${PKGPATH} == "net/libpcap"
USE_LANGUAGES= c c++
LDFLAGS+= -lnetwork
.endif

.if ${PKGPATH} == "net/net-snmp"
LDFLAGS+= -lnetwork
CFLAGS+= -D_BSD_SOURCE -D_XOPEN_SOURCE
.endif

.if ${PKGPATH} == "devel/glib2"
LDFLAGS+= -lbsd -lgnu -lnetwork
CFLAGS+= -D_BSD_SOURCE
.endif

.if ${PKGPATH} == "security/tcp_wrappers"
BUILD_TARGET.Haiku=  haiku
.endif

.if ${PKGPATH} == "net/samba" || ${PKGPATH} == "lang/gcc48-libs"
LDFLAGS+= -Wl,-R/boot/system/lib
.endif

.if ${PKGPATH} == "lang/gcc48-libs"
LDFLAGS+= -L/boot/system/lib
.endif

.if ${PKGPATH} == "security/openssh"
CONFIGURE_ENV+=		use_toolchain_hardening=0
CONFIGURE_ARGS+=       --disable-utmpx
CONFIGURE_ARGS+=       --with-libedit=${BUILDLINK_PREFIX.editline}/lib
.include "../../devel/editline/buildlink3.mk"
.endif

.if ${PKGPATH} == "shells/zsh"
CONFIGURE_ARGS+=  --enable-dynamic
.endif

.if ${PKGPATH} == "archivers/bsdtar" || ${PKGPATH} == "archivers/libarchive"
LDFLAGS+= -lbsd
.endif


.if ${PKGPATH} == "lang/python27"
LDFLAGS+= -L/boot/system/lib
SUBST_CLASSES+=        symlink
SUBST_STAGE.symlink=   pre-configure
SUBST_FILES.symlink=   Makefile.pre.in
SUBST_SED.symlink=     -e 's,LN) -f ,LN) -sf ,g'
.endif

.if ${PKGPATH} == "lang/python311"
FAKE_NCURSES=		yes
.include "../../databases/gdbm_compat/buildlink3.mk"
.endif

.if ${PKGPATH} == "devel/gobject-introspection"
SUBST_CLASSES+=     fix_ld
SUBST_STAGE.fix_ld=   post-configure
SUBST_FILES.fix_ld=   giscanner/shlibs.py
SUBST_SED.fix_ld=     -e "s|'ldd'|'fakeldd'|"
.endif

.if ${PKGPATH} == "sysutils/mc"
SUBST_CLASSES+=     fix_xdg
SUBST_STAGE.fix_xdg=   pre-configure
SUBST_FILES.fix_xdg=   misc/ext.d/*
SUBST_SED.fix_xdg=     -e "s|xdg-open|open|"
LDFLAGS+= -lbsd -lgnu -lnetwork
CFLAGS+= -D_BSD_SOURCE -D_XOPEN_SOURCE_EXTENDED
.endif

.if ${PKGPATH} == "pkgtools/rc.subr"
ONLY_FOR_PLATFORM+=	Haiku-*-*
.endif

.if ${PKGPATH} == "lang/gcc48-libs" || ${PKGPATH} == "lang/gcc47"
CONFIGURE_ARGS+=       --enable-frame-pointer
CONFIGURE_ARGS+=       --with-gnu-ld
CONFIGURE_ARGS+=       --enable-lto
.endif

.if ${.CURDIR:M*fonts/*-ttf*}
INSTALL_TEMPLATES+=	${LOCALPATCHES}/INSTALL.fonts
DEINSTALL_TEMPLATES+=	${LOCALPATCHES}/DEINSTALL.fonts
.endif

.if ${PKGPATH} == "multimedia/ffmpeg2" || ${PKGPATH} == "multimedia/ffmpeg" \
|| ${PKGPATH} == "multimedia/ffplay" || ${PKGPATH} == "multimedia/ffplay2" \
|| ${PKGPATH} == "multimedia/ffmpeg010"
USE_PKGSRC_GCC= yes
GCC_REQD=               4.7
.endif


.if ${PKGPATH} == "devel/p5-subversion"
LDFLAGS+= -lssp_nonshared
.endif

.if ${PKGPATH} == "www/serf"
LDFLAGS+= -Wl,-R${PREFIX}/lib
.endif

.if ${PKGPATH} == "x11/qt4-libs"
CONFIGURE_ARGS+=        -no-largefile
CONFIGURE_ARGS+=        -fast
CONFIGURE_ARGS+=        -no-pch
.endif

.if ${PKGPATH} == "emulators/qemu"
CONFIGURE_ARGS+=	--extra-ldflags=-lbsd
.endif

.if ${PKGPATH} == "net/dante"
CONFIGURE_ARGS+=       --disable-preload
.endif
