WRKOBJDIR=	/boot/work
DISTDIR=	/boot/distfiles
PACKAGES=       /boot/packages/${OPSYS}/${LOWER_ARCH}
LOCALPATCHES=		/boot/localpatches

ALLOW_VULNERABLE_PACKAGES= yes
SKIP_LICENSE_CHECK= yes
PKG_REGISTER_SHELLS=    yes
PREFER_PKGSRC= yes
_OPSYS_PREFER.getopt=   native
PKG_DEVELOPER=yes

.if ${PKGPATH} == "devel/libexecinfo"
BUILDLINK_TRANSFORM+=   rm:-lm
.else
BUILDLINK_TRANSFORM+=   l:m:root
BUILDLINK_TRANSFORM+=   l:pthread:root
BUILDLINK_TRANSFORM+=   l:rt:root
BUILDLINK_TRANSFORM+=   l:c:root
BUILDLINK_TRANSFORM+=   l:dl:root
BUILDLINK_TRANSFORM+=   l:bind:network
BUILDLINK_TRANSFORM+=   l:nsl:network
BUILDLINK_TRANSFORM+=   l:socket:network
BUILDLINK_TRANSFORM+=   l:util:bsd
BUILDLINK_TRANSFORM+=   l:getopt:bsd
BUILDLINK_TRANSFORM+=   l:attr:gnu
.endif

KRB5_DEFAULT= mit-krb5

PKG_DEFAULT_OPTIONS= -x11 -esound -nas -pulseaudio wide-curses
PKG_OPTIONS.perl= -threads
PKG_OPTIONS.git= -git-send-email
PKG_OPTIONS.SDL= aalib
PKG_OPTIONS.ffmpeg2= sdl
PKG_OPTIONS.gcc47= -gcc-fortran -gcc-java -gcc-objc -gcc-objc++
PKG_OPTIONS.gcc48= -gcc-fortran -gcc-graphite -gcc-java -gcc-objc -gcc-objc++
PKG_OPTIONS.freetype2= subpixel
#PKG_OPTIONS.mplayer= -mplayer-runtime-cpudetection
PKG_OPTIONS.psi= -enchant lang-ru
PKG_OPTIONS.mc= mc-samba ncurses -slang
#PKG_OPTIONS.php= suhosin
PKG_OPTIONS.cherokee= -pam
PKG_OPTIONS.boost=	icu
PKG_OPTIONS.cairo= -xcb
PKG_OPTIONS.samba= -ads -ldap -winbind -pam

.if defined(GNU_CONFIGURE)
CONFIGURE_ENV+= gl_cv_func_realpath_works="guessing yes"
CONFIGURE_ENV+= sys_lib_dlsearch_path_spec='/boot/system/lib'
.endif

.if ${PKGPATH} == "textproc/xmlcatmgr" || ${PKGPATH} == "graphics/netpbm" \
|| ${PKGPATH} == "textproc/mdocml" || ${PKGPATH} == "security/mit-krb5" \
|| ${PKGPATH} == "devel/git-base"
LDFLAGS+= -lbsd
.endif

.if ${PKGPATH} == "comms/minicom"
CONFIGURE_ARGS+= --enable-lock-dir=/var/empty
CONFIGURE_ARGS+= --enable-dfl-port=/dev/ports/usb0
.endif

.if ${PKGPATH} == "graphics/netpbm" || ${PKGPATH} == "security/tcp_wrappers"
LDFLAGS+= -lnetwork
.endif

.if ${PKGPATH} == "net/samba"
LDFLAGS+= -Wl,-R/boot/system/lib
.endif

.if ${PKGPATH} == "security/openssh"
CONFIGURE_ARGS+=       --disable-utmpx
CONFIGURE_ARGS+=       --with-libedit=${BUILDLINK_PREFIX.editline}/lib
.include "../../devel/editline/buildlink3.mk"
.endif

.if ${PKGPATH} == "devel/ncurses"
SUBST_CLASSES+=		sh
SUBST_STAGE.sh=		post-configure
SUBST_MESSAGE.sh=	Fix broken event on Haiku.
SUBST_FILES.sh=		edit_man.sh include/MKkey_defs.sh \
					include/edit_cfg.sh man/make_sed.sh \
					man/MKterminfo.sh ncurses/base/MKlib_gen.sh \
					ncurses/tinfo/MKkeys_list.sh ncurses/tty/MKexpanded.sh \
					progs/MKtermsort.sh progs/capconvert 
SUBST_SED.sh+=		-e 's/1 2 5 15/1 2 15/g'
.endif

.if ${PKGPATH} == "lang/python27"
SUBST_CLASSES+=		sh
SUBST_CLASSES+=                symlink
SUBST_STAGE.symlink=   pre-configure
SUBST_FILES.symlink=   Makefile.pre.in
SUBST_SED.symlink=     -e 's,LN) -f ,LN) -sf ,g'
.endif

.if ${PKGPATH} == "pkgtools/rc.subr"
ONLY_FOR_PLATFORM+=	Haiku-*-*
.endif

.if ${PKGPATH} == archivers/bzip2 || ${PKGPATH} == "archivers/rzip" \
|| ${PKGPATH} == "devel/cmake" || ${PKGPATH} == "lang/ruby200-base"
TOOLS_PLATFORM.ln?=             /bin/ln -s
.endif
